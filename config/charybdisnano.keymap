#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };

        dongle_bootload_macro: bootload_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
            label = "BOOTLOAD_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 6>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <22 23>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
            timeout-ms = <50>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <3 4>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwery {
            label = "Qwery";
            bindings = <
&kp Q           &kp W           &kp E               &kp R             &kp T                     &kp Y  &kp U              &kp I                &kp O                    &hm LG(LS(V)) P
&hm LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G                     &kp H  &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &hm RIGHT_ALT L          &as COLON SEMICOLON
&kp Z           &kp X           &kp C               &kp V             &kp B                     &kp N  &kp M              &as LESS_THAN COMMA  &as GREATER_THAN PERIOD  &as QUESTION SLASH
                                                    &ltq 1 BACKSPACE  &ltq 3 TAB  &ltq 2 SPACE         &ltq 2 SPACE       &ltq 3 ENTER         &ltq 1 DELETE
            >;
        };

        Navi {
            label = "navi";
            bindings = <
&dongle_bootload_macro  &trans    &kp UP    &kp EQUAL  &trans                     &trans                &trans     &trans     &trans     &trans
&trans                  &kp LEFT  &kp DOWN  &kp RIGHT  &kp C_VOLUME_UP            &kp C_BRIGHTNESS_INC  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&out OUT_TOG            &trans    &trans    &trans     &kp C_VOLUME_DOWN          &kp C_BRI_DEC         &trans     &trans     &trans     &trans
                                            &trans     &trans             &trans                        &trans     &trans     &trans
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
&kp EXCL      &kp AT        &kp HASH  &kp DLLR  &kp PRCNT               &kp CARET  &kp AMPS         &kp ASTERISK  &kp LPAR                        &kp RPAR
&kp ESCAPE    &kp CAPSLOCK  &kp HOME  &kp END   &kp UNDERSCORE          &kp MINUS  &kp RIGHT_SHIFT  &kp PAGE_UP   &kp PAGE_DOWN                   &as PIPE NON_US_BACKSLASH
&out OUT_TOG  &bootloader   &trans    &trans    &kp TILDE               &kp GRAVE  &as PLUS EQUAL   &kp SQT       &as DOUBLE_QUOTES SINGLE_QUOTE  &kp DELETE
                                      &trans    &trans          &trans             &trans           &trans        &trans
            >;
        };

        Modifer {
            label = "Modifer";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp LG(A)     &kp LG(S)     &kp LG(D)     &kp LG(F)     &kp LEFT_BRACKET          &kp RIGHT_BRACKET  &mkp LCLK     &mkp MCLK     &mkp RCLK     &kp F8
&kp LG(Z)     &kp LG(X)     &kp LG(C)     &kp LG(V)     &kp LEFT_BRACE            &kp RIGHT_BRACE    &kp F1        &kp F2        &kp F3        &kp F4
                                          &trans        &trans            &trans                     &trans        &trans        &trans
            >;
        };

        Flash {
            label = "Flash";
            bindings = <
&dongle_bootload_macro  &trans  &trans  &trans  &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans                  &trans  &trans  &trans  &trans          &trans        &trans        &trans        &trans        &trans
&none                   &trans  &none   &trans  &trans          &trans        &trans        &trans        &trans        &bt BT_CLR
                                        &trans  &trans  &trans                &trans        &trans        &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans          &msc SCRL_UP    &trans           &trans          &trans  &trans     &trans     &trans     &trans
&trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans          &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&trans  &mkp LCLK       &mkp MCLK       &mkp RCLK        &trans          &trans  &trans     &trans     &trans     &trans
                                        &trans           &trans  &trans          &trans     &trans     &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Flash {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
